@page "/login"

@inject IAuthenticationRepository _repo
@inject NavigationManager _navMan

<div class="card">
    <h3 class="card-title">Login</h3>
    @if (!response)
    {
        <div class="alert alert-danger">
            <p>Something went wrong with your registration attempt.</p>
        </div>
    }
    <div class="card-body">
        <EditForm Model="model" OnValidSubmit="HandleLogin">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div class="form-group">
                <label for="email">Email Address</label>
                <InputText Id="email" class="form-control" @bind-Value="model.EmailAddress" />
                <ValidationMessage For="@(() => model.EmailAddress)" />
            </div>
            <div class="form-group">
                <label for="password">Password</label>
                <InputText Id="password" type="password" class="form-control" @bind-Value="model.Password" />
                <ValidationMessage For="@(() => model.Password)" />
            </div>
            <button type="submit" class="btn btn-primary btn-block">Login</button>
        </EditForm>
    </div>
</div>

@code {
    private LoginModel model = new LoginModel();
    private bool response = true;
    private async Task HandleLogin()
    {
        response = await _repo.Login(model);
        if (response)
        {
            _navMan.NavigateTo("/");
        } 
        return; 
    }
}
@page "/authors/"

@inject IAuthorRepository _authRep
@inject NavigationManager _navManager

<h3>Authors</h3>

@if(Model == null)
{
    <div class="alert alert-dismissible alert-secondary">
        Loading...
    </div>
} else
{
    <table class="table table-responsive">
        <thead>
            <tr>
                <th>First Name</th>
                <th>Lasst Name</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach(var author in Model)
            {
                <tr>
                    <td>@author.Firstname</td>
                    <td>@author.Lastname</td>
                    <td>
                        <a href="/authors/view/@author.Id" class="btn btn-primary">
                            <span class="oi oi-book"></span>
                        </a>
                        <a href="/authors/edit/@author.Id" class="btn btn-warning">
                            <span class="oi oi-pencil"></span>
                        </a>
                        <a href="/authors/delete/@author.Id" class="btn btn-danger">
                            <span class="oi oi-delete"></span>
                        </a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private IList<Author> Model;
    protected async override Task OnInitializedAsync() 
    {
        Model = await _authRep.Get(Endpoints.AuthorsEndpoint);
    }

}
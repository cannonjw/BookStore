@page "/books/delete/{Id}"
@attribute [Authorize(Roles="Administrator")]

@using System.IO;

@inject IBookRepository _bookRepo
@inject NavigationManager _navMan
@inject IFileUpload _fileUpload

<h3>Are you sure you want to delete this record?</h3>
<hr />
<br />
@if(!isSuccess)
{
    <ErrorMessage Message="Something went wrong with the delete." />
}
@if (int.Parse(Id) < 1 || string.IsNullOrWhiteSpace(Id))
{
    <ErrorMessage Message="Invalid selection, please try again." />
} else if (Model == null)
{
    <ErrorMessage Message="Invalid Selection, please try again." />
} else
{
    <div class="row">
        <div class="col-6">
            <table class="table table-responsive">
                <tr>
                    <td><strong>Title</strong></td>
                    <td>@Model.Title</td>
                </tr>
                <tr>
                    <td><strong>Author</strong></td>
                    @if (Model.author == null)
                    {
                        <td>No Author Recorded</td>
                    } else
                    {
                        <td><a href="/authors/view/@Model.author.Id">@Model.author.Lastname, @Model.author.Firstname</a></td>
                    }
                </tr>
                <tr>
                    <td><strong>Summary</strong></td>
                    <td>@Model.Summary</td>
                </tr>
                <tr>
                    <td><strong>Published Year</strong></td>
                    <td>@Model.Year</td>
                </tr>
                <tr>
                    <td><strong>ISBN</strong></td>
                    <td>@Model.ISBN</td>
                </tr>
            </table>
        </div>
        <div class="col-4">
            @if(!string.IsNullOrWhiteSpace(Model.Image))
            @if(Model.Image.Contains("http"))
            {
                <img src="@Model.Image" style="height:300px; width:300px" />
            } else
            {
                <img src="Uploads/@Model.Image" style="height:300px; width:300px" />
            }

            <h3 class="text-center text-info">@Model.Price</h3>
        </div>
    </div>
}

<button @onclick="DeleteBook" class="btn btn-danger">
    <span class="oi oi-delete"></span>
    Delete Book
</button>

<button @onclick="BackToList" class="btn btn-outline-secondary">
    <span class="oi oi-media-skip-backward"></span>
    Back To List
</button>

@code {
    [Parameter]
    public string Id { get; set; }
    private bool isSuccess = true;
    private Book Model;

    protected async override Task OnInitializedAsync()
    {
        int id = int.Parse(Id);
        Model = await _bookRepo.Get(Endpoints.BooksEndpoint, id);
    }

    private async Task DeleteBook()
    {
        _fileUpload.RemoveFile(Model.Image);
        int id = int.Parse(Id);
        isSuccess = await _bookRepo.Delete(Endpoints.BooksEndpoint, id);
        BackToList();
    }

    private void BackToList()
    {
        _navMan.NavigateTo("/books/");
    }

}